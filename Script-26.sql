-- 상품 테이블 생성

CREATE TABLE "ITEM" (
	"ITEM_NO"	NUMBER		NOT NULL,
	"ITEM_NAME"	NVARCHAR2(50)		NOT NULL,
	"ITEM_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"ITEM_PRICE"	NUMBER	DEFAULT 0	NOT NULL,
	"ITEM_UPLOAD_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"ITEM_BRAND"	NVARCHAR2(20)		NULL,
	"ITEM_INFO"	NVARCHAR2(2000)		NULL,
	"ITEM_UPDATE_DATE"	DATE	DEFAULT SYSDATE	NULL,
	"ITEM_IMG_PATH"	NVARCHAR2(500)		NULL,
	"CATEGORY_NO"	NUMBER		NOT NULL
);

-- 컬럼 설명
COMMENT ON COLUMN "ITEM"."ITEM_NO" IS '상품번호(PK)';

COMMENT ON COLUMN "ITEM"."ITEM_NAME" IS '상품 이름';

COMMENT ON COLUMN "ITEM"."ITEM_COUNT" IS '상품 재고';

COMMENT ON COLUMN "ITEM"."ITEM_PRICE" IS '상품  가격';

COMMENT ON COLUMN "ITEM"."ITEM_UPLOAD_DATE" IS '상품 등록일';

COMMENT ON COLUMN "ITEM"."ITEM_BRAND" IS '상품 브랜드';

COMMENT ON COLUMN "ITEM"."ITEM_INFO" IS '상품 설명';

COMMENT ON COLUMN "ITEM"."ITEM_UPDATE_DATE" IS '상품 수정일';

COMMENT ON COLUMN "ITEM"."ITEM_IMG_PATH" IS '상품 이미지 경로';

COMMENT ON COLUMN "ITEM"."CATEGORY_NO" IS '카테고리 번호(PK)';

-- ITEM 테이블 PK 설정
ALTER TABLE "ITEM" ADD CONSTRAINT "PK_ITEM" PRIMARY KEY (
	"ITEM_NO"
);

COMMIT;

SELECT * FROM "ITEM";

CREATE SEQUENCE SEQ_ITEM_NO;


-- 상품용 샘플 데이터

BEGIN
	
	FOR I IN 1..100 LOOP
		INSERT INTO "ITEM"
		VALUES(
			SEQ_ITEM_NO.NEXTVAL, 
			SEQ_ITEM_NO.CURRVAL || '번째 상품', 
			10, CEIL( DBMS_RANDOM.VALUE(1,5) ) * 100000, DEFAULT, 
			SEQ_ITEM_NO.CURRVAL || '번쨰 상품의 브랜드', 
			SEQ_ITEM_NO.CURRVAL || '번쨰 상품의 설명~~',
			NULL, NULL, 1
		);
	END LOOP;
	
	
END;

SELECT * FROM "ITEM"
ORDER BY ITEM_NO DESC;

COMMIT;


-------------------------------------------------

-- 상품 사이즈 테이블
CREATE TABLE "SIZE" (
	"SIZE_NO"	NUMBER		NOT NULL,
	"SIZE_VAL"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "SIZE"."SIZE_NO" IS '사이즈  번호';

COMMENT ON COLUMN "SIZE"."SIZE_VAL" IS '사이즈';

-- 사이즈 데이터 입력

INSERT INTO "SIZE" 
VALUES(1, 220);
INSERT INTO "SIZE" 
VALUES(2, 230);
INSERT INTO "SIZE" 
VALUES(3, 240);
INSERT INTO "SIZE" 
VALUES(4, 250);
INSERT INTO "SIZE" 
VALUES(5, 260);
INSERT INTO "SIZE" 
VALUES(6, 270);
INSERT INTO "SIZE" 
VALUES(7, 280);
INSERT INTO "SIZE" 
VALUES(8, 290);
INSERT INTO "SIZE" 
VALUES(9, 300);

SELECT * FROM "SIZE";

COMMIT;

--------------------------------------------------------------------------
-- 상품 사이즈별 재고 관리 테이블
CREATE TABLE "STOCK" (
	"ITEM_STOCK_NO"	NUMBER		NOT NULL,
	"ITEM_NO"	NUMBER		NOT NULL,
	"SIZE_NO"	NUMBER		NOT NULL,
	"SIZE_STOCK"	NUMBER	DEFAULT 0	NOT NULL
);

COMMENT ON COLUMN "STOCK"."ITEM_STOCK_NO" IS '상품 재고 번호(PK)';

COMMENT ON COLUMN "STOCK"."ITEM_NO" IS '상품번호(FK)';

COMMENT ON COLUMN "STOCK"."SIZE_NO" IS '사이즈  번호(FK)';

COMMENT ON COLUMN "STOCK"."SIZE_STOCK" IS '사이즈별 재고';

ALTER TABLE "STOCK" ADD CONSTRAINT "PK_STOCK" PRIMARY KEY (
	"ITEM_STOCK_NO"
);

ALTER TABLE "STOCK" ADD CONSTRAINT "FK_ITEM_TO_STOCK_1" FOREIGN KEY (
	"ITEM_NO"
)
REFERENCES "ITEM" (
	"ITEM_NO"
);

ALTER TABLE "STOCK" ADD CONSTRAINT "FK_SIZE_TO_STOCK_1" FOREIGN KEY (
	"SIZE_NO"
)
REFERENCES "SIZE" (
	"SIZE_NO"
);

COMMIT;

-- 상품 재고 샘플 데이터

CREATE SEQUENCE SEQ_ITEM_STOCK_NO;

BEGIN
	
	FOR I IN 1..100 LOOP
		FOR J IN 1..9 LOOP
			
				INSERT INTO "STOCK"
				VALUES(
					SEQ_ITEM_STOCK_NO.NEXTVAL,
					I, J, ROUND( DBMS_RANDOM.VALUE(0,20) )
				);
			
		END LOOP;
	END LOOP;
	
	
END;

SELECT * FROM "STOCK";
COMMIT;


----------------------------------------------------------------

-- 위시리스트 테이블

CREATE TABLE "WISHLIST" (
	"WISHLIST_NO"	NUMBER		NOT NULL,
	"USER_NO"	NUMBER		NOT NULL,
	"ITEM_NO"	NUMBER		NOT NULL,
	"WISHLIST_UPLOAD_DATE"	DATE	DEFAULT SYSDATE	NOT NULL
);

COMMENT ON COLUMN "WISHLIST"."WISHLIST_NO" IS '위시리스트 번호(PK)';

COMMENT ON COLUMN "WISHLIST"."USER_NO" IS '회원번호(PK)';

COMMENT ON COLUMN "WISHLIST"."ITEM_NO" IS '상품번호(PK)';

COMMENT ON COLUMN "WISHLIST"."WISHLIST_UPLOAD_DATE" IS '위시리스트 상품 추가 날짜';

ALTER TABLE "WISHLIST" ADD CONSTRAINT "PK_WISHLIST" PRIMARY KEY (
	"WISHLIST_NO"
);

ALTER TABLE "WISHLIST" ADD CONSTRAINT "FK_USER_TO_WISHLIST_1" FOREIGN KEY (
	"USER_NO"
)
REFERENCES "USER" (
	"USER_NO"
);

ALTER TABLE "WISHLIST" ADD CONSTRAINT "FK_ITEM_TO_WISHLIST_1" FOREIGN KEY (
	"ITEM_NO"
)
REFERENCES "ITEM" (
	"ITEM_NO"
);

INSERT INTO "WISHLIST"
VALUES (
	1,1,1,DEFAULT
);
INSERT INTO "WISHLIST"
VALUES (
	2,15,1,DEFAULT
);

CREATE SEQUENCE SEQ_WISHLIST_NO;

COMMIT;

-- --------------------------------------------

-- 장바구니 테이블

CREATE TABLE "CART" (
	"CART_NO"	NUMBER		NOT NULL,
	"USER_NO"	NUMBER		NULL,
	"ITEM_STOCK_NO"	NUMBER		NOT NULL,
	"CART_ITEM_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"CART_ITEM_UPLOAD_DATE"	DATE	DEFAULT SYSDATE	NOT NULL
);

COMMENT ON COLUMN "CART"."CART_NO" IS '장바구니번호(PK)';

COMMENT ON COLUMN "CART"."USER_NO" IS '회원번호(FK)';

COMMENT ON COLUMN "CART"."ITEM_STOCK_NO" IS '상품 재고 번호(FK)';

COMMENT ON COLUMN "CART"."CART_ITEM_COUNT" IS '상품 수량';

COMMENT ON COLUMN "CART"."CART_ITEM_UPLOAD_DATE" IS '장바구니 추가 날짜';

ALTER TABLE "CART" ADD CONSTRAINT "PK_CART" PRIMARY KEY (
	"CART_NO"
);

ALTER TABLE "CART" ADD CONSTRAINT "FK_USER_TO_CART_1" FOREIGN KEY (
	"USER_NO"
)
REFERENCES "USER" (
	"USER_NO"
);

ALTER TABLE "CART" ADD CONSTRAINT "FK_STOCK_TO_CART_1" FOREIGN KEY (
	"ITEM_STOCK_NO"
)
REFERENCES "STOCK" (
	"ITEM_STOCK_NO"
);

-- 장바구니 번호용 시퀀스 생성 
CREATE SEQUENCE SEQ_CART_NO;

-- 장바구니 번호용 시퀀스 함수
-- SELECT NEXT_CART_NO() FROM DUAL;

SELECT ITEM_STOCK_NO FROM "CART" 
WHERE ITEM_STOCK_NO IN (
	SELECT ITEM_STOCK_NO FROM "STOCK" 
	WHERE ITEM_NO = 1
	AND SIZE_NO = 1
	UNION
	SELECT ITEM_STOCK_NO FROM "STOCK" 
	WHERE ITEM_NO = 2
	AND SIZE_NO = 2
);



COMMIT;

--------------------------------------------------------------------

-- 주문 테이블
CREATE TABLE "USER_ORDER" (
	"ORDER_NO"	NUMBER		NOT NULL,
	"ORDER_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"ORDER_ADDRESS"	VARCHAR(500)		NULL,
	"ORDER_CONFIRM"	CHAR(1)	DEFAULT 'N'	NULL,
	"ORDER_PRICE"	NUMBER		NULL,
	"USER_NO"	NUMBER
);


COMMENT ON COLUMN "USER_ORDER"."ORDER_NO" IS '주문 번호(PK)';

COMMENT ON COLUMN "USER_ORDER"."ORDER_DATE" IS '주문 날짜';

COMMENT ON COLUMN "USER_ORDER"."ORDER_ADDRESS" IS '배송지';

COMMENT ON COLUMN "USER_ORDER"."ORDER_CONFIRM" IS '주문 확정';

COMMENT ON COLUMN "USER_ORDER"."ORDER_PRICE" IS '총 주문 금액';

COMMENT ON COLUMN "USER_ORDER"."USER_NO" IS '회원번호(FK)';

ALTER TABLE "USER_ORDER" ADD CONSTRAINT "PK_USER_ORDER" PRIMARY KEY (
	"ORDER_NO"
);

ALTER TABLE "USER_ORDER" ADD CONSTRAINT "FK_USER_TO_USER_ORDER_1" FOREIGN KEY (
	"USER_NO"
)
REFERENCES "USER" (
	"USER_NO"
);

CREATE SEQUENCE SEQ_ORDER_NO;
COMMIT;



-- 주문 상세정보 테이블
CREATE TABLE "ORDER_DETAIL" (
	"ORDER_DETAIL_NO"	NUMBER		NOT NULL,
	"ORDER_NO"	NUMBER		NOT NULL,
	"ITEM_STOCK_NO"	NUMBER		NOT NULL,
	"ORDER_ITEM_COUNT"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "ORDER_DETAIL"."ORDER_DETAIL_NO" IS '주문 상세 번호(PK)';

COMMENT ON COLUMN "ORDER_DETAIL"."ORDER_NO" IS '주문 번호(PK)';

COMMENT ON COLUMN "ORDER_DETAIL"."ITEM_STOCK_NO" IS '상품 재고 번호(PK)';

COMMENT ON COLUMN "ORDER_DETAIL"."ORDER_ITEM_COUNT" IS '주문 수량';

ALTER TABLE "ORDER_DETAIL" ADD CONSTRAINT "PK_ORDER_DETAIL" PRIMARY KEY (
	"ORDER_DETAIL_NO"
);

ALTER TABLE "ORDER_DETAIL" ADD CONSTRAINT "FK_USER_ORDER_TO_ORDER_DETAIL_1" FOREIGN KEY (
	"ORDER_NO"
)
REFERENCES "USER_ORDER" (
	"ORDER_NO"
);

ALTER TABLE "ORDER_DETAIL" ADD CONSTRAINT "FK_STOCK_TO_ORDER_DETAIL_1" FOREIGN KEY (
	"ITEM_STOCK_NO"
)
REFERENCES "STOCK" (
	"ITEM_STOCK_NO"
);


-- 주문 상세정보 테이블 용 시퀀스 생성
CREATE SEQUENCE SEQ_ORDER_DETAIL_NO;


SELECT * FROM "USER_ORDER";
SELECT * FROM "ORDER_DETAIL"
ORDER BY ORDER_NO
;


SELECT NEXT_ORDER_DETAIL_NO() FROM DUAL;
SELECT NEXT_IMG_NO() FROM DUAL;
SELECT NEXT_CART_NO() FROM DUAL;

DELETE FROM "ORDER_DETAIL";
DELETE FROM "USER_ORDER";
COMMIT;

SELECT * 
FROM "CART"
WHERE USER_NO = 15;

SELECT CART_NO, ITEM_STOCK_NO, ITEM_NAME, ITEM_PRICE, ITEM_BRAND, 
			   ITEM_IMG_PATH, CART_ITEM_COUNT, SIZE_VAL, (IMG_PATH || IMG_RENAME) THUMBNAIL
		FROM "CART"
		JOIN "STOCK" USING(ITEM_STOCK_NO)
		JOIN "ITEM" USING(ITEM_NO)
		JOIN "SIZE" USING(SIZE_NO)
		JOIN "ITEM_IMG" USING(ITEM_NO)
		WHERE USER_NO = 15
		AND (
			IMG_ORDER = 0
			OR IMG_ORDER IS NULL
		)
		ORDER BY CART_ITEM_UPLOAD_DATE
		;
		
	
	
SELECT ITEM_STOCK_NO, ITEM_NO, ITEM_NAME, ITEM_PRICE, ITEM_BRAND, SIZE_NO, SIZE_VAL,
				(IMG_PATH || IMG_RENAME) THUMBNAIL
		FROM "STOCK"
		JOIN "ITEM" USING(ITEM_NO)
		JOIN "SIZE" USING(SIZE_NO) 
		JOIN "ITEM_IMG" USING(ITEM_NO)
		WHERE ITEM_STOCK_NO = 1
		AND (
			IMG_ORDER = 0
			OR IMG_ORDER IS NULL
		)
		;
	
	SELECT ORDER_DETAIL_NO, ITEM_STOCK_NO, ITEM_NAME, SIZE_VAL, ITEM_PRICE, ORDER_ITEM_COUNT,
				(IMG_PATH || IMG_RENAME) THUMBNAIL
		FROM "ORDER_DETAIL"
		JOIN "STOCK" USING(ITEM_STOCK_NO)
		JOIN "ITEM" USING(ITEM_NO)
		JOIN "SIZE" USING(SIZE_NO)
		JOIN "ITEM_IMG" USING(ITEM_NO)
		WHERE ORDER_NO = 234
		AND (
			IMG_ORDER = 0
			OR IMG_ORDER IS NULL
		);

	
	
DELETE FROM "WISHLIST";
COMMIT;
	
DELETE FROM "ORDER_DETAIL";

	
SELECT ORDER_NO, ORDER_DATE, ORDER_ADDRESS, USER_NO, ORDER_PRICE, ORDER_CONFIRM  FROM "USER_ORDER"   
FROM "USER_ORDER"   
ORDER BY ORDER_DATE;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	